#!/bin/bash
# the echos were just for fast debugging, now they're commented out

# check if the script is already running
running=`ps -A | grep breaktime_adv | wc -l`
if [ $running -gt 2 ]
then 
    exit
fi

# get a random number
number=$RANDOM
# modulo 80
let "number %= 80"
notify-send "You should take a break in $number minutes"
# set an increment. Walk is increased every time we decline walking 
let walk=1
while [ $walk -gt 0 ]
do
    currenttime=`date | awk -F' ' '{print $1,$4}'`
    # echo "sleeping ${number} minutes"
    sleep ${number}m
    zenity --question --text="You should take a 5 minute break, walk around a bit. Want to do this now?" --cancel-label=Later --ok-label=Now  > /dev/null 2>&1
    # reads in the response to the zenity question
    case $? in
        0)
            # echo "Now."
            walk=-1
            echo $currenttime, 1 >> /home/dpluth/Source/scripts/breaks
            ;;
        1)
            # echo "Later."
            echo $currenttime, 0 >> /home/dpluth/Source/scripts/breaks
            let "walk=$walk+1"
            ;;
        -1)
            # should never trigger, there are only 2 buttons on the zenity
            notify-send "An unexpected error has occurred."
            ;;
    esac
    # define new random number, set to modulo 80, then divide by number of times refused
    number=$RANDOM
    # echo $number
    let "number %= 80"
    # echo $number
    if [ $walk -gt 0 ]
    then
        number=`echo "$number / $walk" | bc`
        notify-send "ok, I'll ask again in $number minutes"
    fi
done
